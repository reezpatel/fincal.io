//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type GoalStatus string

const (
	GoalStatus_Active    GoalStatus = "active"
	GoalStatus_Completed GoalStatus = "completed"
	GoalStatus_Failed    GoalStatus = "failed"
)

func (e *GoalStatus) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "active":
		*e = GoalStatus_Active
	case "completed":
		*e = GoalStatus_Completed
	case "failed":
		*e = GoalStatus_Failed
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for GoalStatus enum")
	}

	return nil
}

func (e GoalStatus) String() string {
	return string(e)
}
