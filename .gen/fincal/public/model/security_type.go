//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type SecurityType string

const (
	SecurityType_Stock      SecurityType = "stock"
	SecurityType_MutualFund SecurityType = "mutual_fund"
	SecurityType_Bond       SecurityType = "bond"
	SecurityType_Etf        SecurityType = "etf"
	SecurityType_Other      SecurityType = "other"
)

func (e *SecurityType) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "stock":
		*e = SecurityType_Stock
	case "mutual_fund":
		*e = SecurityType_MutualFund
	case "bond":
		*e = SecurityType_Bond
	case "etf":
		*e = SecurityType_Etf
	case "other":
		*e = SecurityType_Other
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for SecurityType enum")
	}

	return nil
}

func (e SecurityType) String() string {
	return string(e)
}
