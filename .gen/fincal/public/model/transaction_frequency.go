//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type TransactionFrequency string

const (
	TransactionFrequency_Daily   TransactionFrequency = "daily"
	TransactionFrequency_Weekly  TransactionFrequency = "weekly"
	TransactionFrequency_Monthly TransactionFrequency = "monthly"
	TransactionFrequency_Yearly  TransactionFrequency = "yearly"
	TransactionFrequency_Manual  TransactionFrequency = "manual"
)

func (e *TransactionFrequency) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "daily":
		*e = TransactionFrequency_Daily
	case "weekly":
		*e = TransactionFrequency_Weekly
	case "monthly":
		*e = TransactionFrequency_Monthly
	case "yearly":
		*e = TransactionFrequency_Yearly
	case "manual":
		*e = TransactionFrequency_Manual
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for TransactionFrequency enum")
	}

	return nil
}

func (e TransactionFrequency) String() string {
	return string(e)
}
