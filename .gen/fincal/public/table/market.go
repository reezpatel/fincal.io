//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Market = newMarketTable("public", "market", "")

type marketTable struct {
	postgres.Table

	// Columns
	Code         postgres.ColumnString
	Name         postgres.ColumnString
	CurrencyCode postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type MarketTable struct {
	marketTable

	EXCLUDED marketTable
}

// AS creates new MarketTable with assigned alias
func (a MarketTable) AS(alias string) *MarketTable {
	return newMarketTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MarketTable with assigned schema name
func (a MarketTable) FromSchema(schemaName string) *MarketTable {
	return newMarketTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MarketTable with assigned table prefix
func (a MarketTable) WithPrefix(prefix string) *MarketTable {
	return newMarketTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MarketTable with assigned table suffix
func (a MarketTable) WithSuffix(suffix string) *MarketTable {
	return newMarketTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMarketTable(schemaName, tableName, alias string) *MarketTable {
	return &MarketTable{
		marketTable: newMarketTableImpl(schemaName, tableName, alias),
		EXCLUDED:    newMarketTableImpl("", "excluded", ""),
	}
}

func newMarketTableImpl(schemaName, tableName, alias string) marketTable {
	var (
		CodeColumn         = postgres.StringColumn("code")
		NameColumn         = postgres.StringColumn("name")
		CurrencyCodeColumn = postgres.StringColumn("currency_code")
		allColumns         = postgres.ColumnList{CodeColumn, NameColumn, CurrencyCodeColumn}
		mutableColumns     = postgres.ColumnList{NameColumn, CurrencyCodeColumn}
	)

	return marketTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Code:         CodeColumn,
		Name:         NameColumn,
		CurrencyCode: CurrencyCodeColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
