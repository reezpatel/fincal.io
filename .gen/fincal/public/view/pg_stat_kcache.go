//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgStatKcache = newPgStatKcacheTable("public", "pg_stat_kcache", "")

type pgStatKcacheTable struct {
	postgres.Table

	// Columns
	Datname        postgres.ColumnString
	PlanUserTime   postgres.ColumnFloat
	PlanSystemTime postgres.ColumnFloat
	PlanMinflts    postgres.ColumnFloat
	PlanMajflts    postgres.ColumnFloat
	PlanNswaps     postgres.ColumnFloat
	PlanReads      postgres.ColumnFloat
	PlanReadsBlks  postgres.ColumnFloat
	PlanWrites     postgres.ColumnFloat
	PlanWritesBlks postgres.ColumnFloat
	PlanMsgsnds    postgres.ColumnFloat
	PlanMsgrcvs    postgres.ColumnFloat
	PlanNsignals   postgres.ColumnFloat
	PlanNvcsws     postgres.ColumnFloat
	PlanNivcsws    postgres.ColumnFloat
	ExecUserTime   postgres.ColumnFloat
	ExecSystemTime postgres.ColumnFloat
	ExecMinflts    postgres.ColumnFloat
	ExecMajflts    postgres.ColumnFloat
	ExecNswaps     postgres.ColumnFloat
	ExecReads      postgres.ColumnFloat
	ExecReadsBlks  postgres.ColumnFloat
	ExecWrites     postgres.ColumnFloat
	ExecWritesBlks postgres.ColumnFloat
	ExecMsgsnds    postgres.ColumnFloat
	ExecMsgrcvs    postgres.ColumnFloat
	ExecNsignals   postgres.ColumnFloat
	ExecNvcsws     postgres.ColumnFloat
	ExecNivcsws    postgres.ColumnFloat

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgStatKcacheTable struct {
	pgStatKcacheTable

	EXCLUDED pgStatKcacheTable
}

// AS creates new PgStatKcacheTable with assigned alias
func (a PgStatKcacheTable) AS(alias string) *PgStatKcacheTable {
	return newPgStatKcacheTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PgStatKcacheTable with assigned schema name
func (a PgStatKcacheTable) FromSchema(schemaName string) *PgStatKcacheTable {
	return newPgStatKcacheTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PgStatKcacheTable with assigned table prefix
func (a PgStatKcacheTable) WithPrefix(prefix string) *PgStatKcacheTable {
	return newPgStatKcacheTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PgStatKcacheTable with assigned table suffix
func (a PgStatKcacheTable) WithSuffix(suffix string) *PgStatKcacheTable {
	return newPgStatKcacheTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPgStatKcacheTable(schemaName, tableName, alias string) *PgStatKcacheTable {
	return &PgStatKcacheTable{
		pgStatKcacheTable: newPgStatKcacheTableImpl(schemaName, tableName, alias),
		EXCLUDED:          newPgStatKcacheTableImpl("", "excluded", ""),
	}
}

func newPgStatKcacheTableImpl(schemaName, tableName, alias string) pgStatKcacheTable {
	var (
		DatnameColumn        = postgres.StringColumn("datname")
		PlanUserTimeColumn   = postgres.FloatColumn("plan_user_time")
		PlanSystemTimeColumn = postgres.FloatColumn("plan_system_time")
		PlanMinfltsColumn    = postgres.FloatColumn("plan_minflts")
		PlanMajfltsColumn    = postgres.FloatColumn("plan_majflts")
		PlanNswapsColumn     = postgres.FloatColumn("plan_nswaps")
		PlanReadsColumn      = postgres.FloatColumn("plan_reads")
		PlanReadsBlksColumn  = postgres.FloatColumn("plan_reads_blks")
		PlanWritesColumn     = postgres.FloatColumn("plan_writes")
		PlanWritesBlksColumn = postgres.FloatColumn("plan_writes_blks")
		PlanMsgsndsColumn    = postgres.FloatColumn("plan_msgsnds")
		PlanMsgrcvsColumn    = postgres.FloatColumn("plan_msgrcvs")
		PlanNsignalsColumn   = postgres.FloatColumn("plan_nsignals")
		PlanNvcswsColumn     = postgres.FloatColumn("plan_nvcsws")
		PlanNivcswsColumn    = postgres.FloatColumn("plan_nivcsws")
		ExecUserTimeColumn   = postgres.FloatColumn("exec_user_time")
		ExecSystemTimeColumn = postgres.FloatColumn("exec_system_time")
		ExecMinfltsColumn    = postgres.FloatColumn("exec_minflts")
		ExecMajfltsColumn    = postgres.FloatColumn("exec_majflts")
		ExecNswapsColumn     = postgres.FloatColumn("exec_nswaps")
		ExecReadsColumn      = postgres.FloatColumn("exec_reads")
		ExecReadsBlksColumn  = postgres.FloatColumn("exec_reads_blks")
		ExecWritesColumn     = postgres.FloatColumn("exec_writes")
		ExecWritesBlksColumn = postgres.FloatColumn("exec_writes_blks")
		ExecMsgsndsColumn    = postgres.FloatColumn("exec_msgsnds")
		ExecMsgrcvsColumn    = postgres.FloatColumn("exec_msgrcvs")
		ExecNsignalsColumn   = postgres.FloatColumn("exec_nsignals")
		ExecNvcswsColumn     = postgres.FloatColumn("exec_nvcsws")
		ExecNivcswsColumn    = postgres.FloatColumn("exec_nivcsws")
		allColumns           = postgres.ColumnList{DatnameColumn, PlanUserTimeColumn, PlanSystemTimeColumn, PlanMinfltsColumn, PlanMajfltsColumn, PlanNswapsColumn, PlanReadsColumn, PlanReadsBlksColumn, PlanWritesColumn, PlanWritesBlksColumn, PlanMsgsndsColumn, PlanMsgrcvsColumn, PlanNsignalsColumn, PlanNvcswsColumn, PlanNivcswsColumn, ExecUserTimeColumn, ExecSystemTimeColumn, ExecMinfltsColumn, ExecMajfltsColumn, ExecNswapsColumn, ExecReadsColumn, ExecReadsBlksColumn, ExecWritesColumn, ExecWritesBlksColumn, ExecMsgsndsColumn, ExecMsgrcvsColumn, ExecNsignalsColumn, ExecNvcswsColumn, ExecNivcswsColumn}
		mutableColumns       = postgres.ColumnList{DatnameColumn, PlanUserTimeColumn, PlanSystemTimeColumn, PlanMinfltsColumn, PlanMajfltsColumn, PlanNswapsColumn, PlanReadsColumn, PlanReadsBlksColumn, PlanWritesColumn, PlanWritesBlksColumn, PlanMsgsndsColumn, PlanMsgrcvsColumn, PlanNsignalsColumn, PlanNvcswsColumn, PlanNivcswsColumn, ExecUserTimeColumn, ExecSystemTimeColumn, ExecMinfltsColumn, ExecMajfltsColumn, ExecNswapsColumn, ExecReadsColumn, ExecReadsBlksColumn, ExecWritesColumn, ExecWritesBlksColumn, ExecMsgsndsColumn, ExecMsgrcvsColumn, ExecNsignalsColumn, ExecNvcswsColumn, ExecNivcswsColumn}
	)

	return pgStatKcacheTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Datname:        DatnameColumn,
		PlanUserTime:   PlanUserTimeColumn,
		PlanSystemTime: PlanSystemTimeColumn,
		PlanMinflts:    PlanMinfltsColumn,
		PlanMajflts:    PlanMajfltsColumn,
		PlanNswaps:     PlanNswapsColumn,
		PlanReads:      PlanReadsColumn,
		PlanReadsBlks:  PlanReadsBlksColumn,
		PlanWrites:     PlanWritesColumn,
		PlanWritesBlks: PlanWritesBlksColumn,
		PlanMsgsnds:    PlanMsgsndsColumn,
		PlanMsgrcvs:    PlanMsgrcvsColumn,
		PlanNsignals:   PlanNsignalsColumn,
		PlanNvcsws:     PlanNvcswsColumn,
		PlanNivcsws:    PlanNivcswsColumn,
		ExecUserTime:   ExecUserTimeColumn,
		ExecSystemTime: ExecSystemTimeColumn,
		ExecMinflts:    ExecMinfltsColumn,
		ExecMajflts:    ExecMajfltsColumn,
		ExecNswaps:     ExecNswapsColumn,
		ExecReads:      ExecReadsColumn,
		ExecReadsBlks:  ExecReadsBlksColumn,
		ExecWrites:     ExecWritesColumn,
		ExecWritesBlks: ExecWritesBlksColumn,
		ExecMsgsnds:    ExecMsgsndsColumn,
		ExecMsgrcvs:    ExecMsgrcvsColumn,
		ExecNsignals:   ExecNsignalsColumn,
		ExecNvcsws:     ExecNvcswsColumn,
		ExecNivcsws:    ExecNivcswsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
