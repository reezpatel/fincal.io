//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgStatKcacheDetail = newPgStatKcacheDetailTable("public", "pg_stat_kcache_detail", "")

type pgStatKcacheDetailTable struct {
	postgres.Table

	// Columns
	Query          postgres.ColumnString
	Top            postgres.ColumnBool
	Datname        postgres.ColumnString
	Rolname        postgres.ColumnString
	PlanUserTime   postgres.ColumnFloat
	PlanSystemTime postgres.ColumnFloat
	PlanMinflts    postgres.ColumnInteger
	PlanMajflts    postgres.ColumnInteger
	PlanNswaps     postgres.ColumnInteger
	PlanReads      postgres.ColumnInteger
	PlanReadsBlks  postgres.ColumnInteger
	PlanWrites     postgres.ColumnInteger
	PlanWritesBlks postgres.ColumnInteger
	PlanMsgsnds    postgres.ColumnInteger
	PlanMsgrcvs    postgres.ColumnInteger
	PlanNsignals   postgres.ColumnInteger
	PlanNvcsws     postgres.ColumnInteger
	PlanNivcsws    postgres.ColumnInteger
	ExecUserTime   postgres.ColumnFloat
	ExecSystemTime postgres.ColumnFloat
	ExecMinflts    postgres.ColumnInteger
	ExecMajflts    postgres.ColumnInteger
	ExecNswaps     postgres.ColumnInteger
	ExecReads      postgres.ColumnInteger
	ExecReadsBlks  postgres.ColumnInteger
	ExecWrites     postgres.ColumnInteger
	ExecWritesBlks postgres.ColumnInteger
	ExecMsgsnds    postgres.ColumnInteger
	ExecMsgrcvs    postgres.ColumnInteger
	ExecNsignals   postgres.ColumnInteger
	ExecNvcsws     postgres.ColumnInteger
	ExecNivcsws    postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgStatKcacheDetailTable struct {
	pgStatKcacheDetailTable

	EXCLUDED pgStatKcacheDetailTable
}

// AS creates new PgStatKcacheDetailTable with assigned alias
func (a PgStatKcacheDetailTable) AS(alias string) *PgStatKcacheDetailTable {
	return newPgStatKcacheDetailTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PgStatKcacheDetailTable with assigned schema name
func (a PgStatKcacheDetailTable) FromSchema(schemaName string) *PgStatKcacheDetailTable {
	return newPgStatKcacheDetailTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PgStatKcacheDetailTable with assigned table prefix
func (a PgStatKcacheDetailTable) WithPrefix(prefix string) *PgStatKcacheDetailTable {
	return newPgStatKcacheDetailTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PgStatKcacheDetailTable with assigned table suffix
func (a PgStatKcacheDetailTable) WithSuffix(suffix string) *PgStatKcacheDetailTable {
	return newPgStatKcacheDetailTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPgStatKcacheDetailTable(schemaName, tableName, alias string) *PgStatKcacheDetailTable {
	return &PgStatKcacheDetailTable{
		pgStatKcacheDetailTable: newPgStatKcacheDetailTableImpl(schemaName, tableName, alias),
		EXCLUDED:                newPgStatKcacheDetailTableImpl("", "excluded", ""),
	}
}

func newPgStatKcacheDetailTableImpl(schemaName, tableName, alias string) pgStatKcacheDetailTable {
	var (
		QueryColumn          = postgres.StringColumn("query")
		TopColumn            = postgres.BoolColumn("top")
		DatnameColumn        = postgres.StringColumn("datname")
		RolnameColumn        = postgres.StringColumn("rolname")
		PlanUserTimeColumn   = postgres.FloatColumn("plan_user_time")
		PlanSystemTimeColumn = postgres.FloatColumn("plan_system_time")
		PlanMinfltsColumn    = postgres.IntegerColumn("plan_minflts")
		PlanMajfltsColumn    = postgres.IntegerColumn("plan_majflts")
		PlanNswapsColumn     = postgres.IntegerColumn("plan_nswaps")
		PlanReadsColumn      = postgres.IntegerColumn("plan_reads")
		PlanReadsBlksColumn  = postgres.IntegerColumn("plan_reads_blks")
		PlanWritesColumn     = postgres.IntegerColumn("plan_writes")
		PlanWritesBlksColumn = postgres.IntegerColumn("plan_writes_blks")
		PlanMsgsndsColumn    = postgres.IntegerColumn("plan_msgsnds")
		PlanMsgrcvsColumn    = postgres.IntegerColumn("plan_msgrcvs")
		PlanNsignalsColumn   = postgres.IntegerColumn("plan_nsignals")
		PlanNvcswsColumn     = postgres.IntegerColumn("plan_nvcsws")
		PlanNivcswsColumn    = postgres.IntegerColumn("plan_nivcsws")
		ExecUserTimeColumn   = postgres.FloatColumn("exec_user_time")
		ExecSystemTimeColumn = postgres.FloatColumn("exec_system_time")
		ExecMinfltsColumn    = postgres.IntegerColumn("exec_minflts")
		ExecMajfltsColumn    = postgres.IntegerColumn("exec_majflts")
		ExecNswapsColumn     = postgres.IntegerColumn("exec_nswaps")
		ExecReadsColumn      = postgres.IntegerColumn("exec_reads")
		ExecReadsBlksColumn  = postgres.IntegerColumn("exec_reads_blks")
		ExecWritesColumn     = postgres.IntegerColumn("exec_writes")
		ExecWritesBlksColumn = postgres.IntegerColumn("exec_writes_blks")
		ExecMsgsndsColumn    = postgres.IntegerColumn("exec_msgsnds")
		ExecMsgrcvsColumn    = postgres.IntegerColumn("exec_msgrcvs")
		ExecNsignalsColumn   = postgres.IntegerColumn("exec_nsignals")
		ExecNvcswsColumn     = postgres.IntegerColumn("exec_nvcsws")
		ExecNivcswsColumn    = postgres.IntegerColumn("exec_nivcsws")
		allColumns           = postgres.ColumnList{QueryColumn, TopColumn, DatnameColumn, RolnameColumn, PlanUserTimeColumn, PlanSystemTimeColumn, PlanMinfltsColumn, PlanMajfltsColumn, PlanNswapsColumn, PlanReadsColumn, PlanReadsBlksColumn, PlanWritesColumn, PlanWritesBlksColumn, PlanMsgsndsColumn, PlanMsgrcvsColumn, PlanNsignalsColumn, PlanNvcswsColumn, PlanNivcswsColumn, ExecUserTimeColumn, ExecSystemTimeColumn, ExecMinfltsColumn, ExecMajfltsColumn, ExecNswapsColumn, ExecReadsColumn, ExecReadsBlksColumn, ExecWritesColumn, ExecWritesBlksColumn, ExecMsgsndsColumn, ExecMsgrcvsColumn, ExecNsignalsColumn, ExecNvcswsColumn, ExecNivcswsColumn}
		mutableColumns       = postgres.ColumnList{QueryColumn, TopColumn, DatnameColumn, RolnameColumn, PlanUserTimeColumn, PlanSystemTimeColumn, PlanMinfltsColumn, PlanMajfltsColumn, PlanNswapsColumn, PlanReadsColumn, PlanReadsBlksColumn, PlanWritesColumn, PlanWritesBlksColumn, PlanMsgsndsColumn, PlanMsgrcvsColumn, PlanNsignalsColumn, PlanNvcswsColumn, PlanNivcswsColumn, ExecUserTimeColumn, ExecSystemTimeColumn, ExecMinfltsColumn, ExecMajfltsColumn, ExecNswapsColumn, ExecReadsColumn, ExecReadsBlksColumn, ExecWritesColumn, ExecWritesBlksColumn, ExecMsgsndsColumn, ExecMsgrcvsColumn, ExecNsignalsColumn, ExecNvcswsColumn, ExecNivcswsColumn}
	)

	return pgStatKcacheDetailTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Query:          QueryColumn,
		Top:            TopColumn,
		Datname:        DatnameColumn,
		Rolname:        RolnameColumn,
		PlanUserTime:   PlanUserTimeColumn,
		PlanSystemTime: PlanSystemTimeColumn,
		PlanMinflts:    PlanMinfltsColumn,
		PlanMajflts:    PlanMajfltsColumn,
		PlanNswaps:     PlanNswapsColumn,
		PlanReads:      PlanReadsColumn,
		PlanReadsBlks:  PlanReadsBlksColumn,
		PlanWrites:     PlanWritesColumn,
		PlanWritesBlks: PlanWritesBlksColumn,
		PlanMsgsnds:    PlanMsgsndsColumn,
		PlanMsgrcvs:    PlanMsgrcvsColumn,
		PlanNsignals:   PlanNsignalsColumn,
		PlanNvcsws:     PlanNvcswsColumn,
		PlanNivcsws:    PlanNivcswsColumn,
		ExecUserTime:   ExecUserTimeColumn,
		ExecSystemTime: ExecSystemTimeColumn,
		ExecMinflts:    ExecMinfltsColumn,
		ExecMajflts:    ExecMajfltsColumn,
		ExecNswaps:     ExecNswapsColumn,
		ExecReads:      ExecReadsColumn,
		ExecReadsBlks:  ExecReadsBlksColumn,
		ExecWrites:     ExecWritesColumn,
		ExecWritesBlks: ExecWritesBlksColumn,
		ExecMsgsnds:    ExecMsgsndsColumn,
		ExecMsgrcvs:    ExecMsgrcvsColumn,
		ExecNsignals:   ExecNsignalsColumn,
		ExecNvcsws:     ExecNvcswsColumn,
		ExecNivcsws:    ExecNivcswsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
